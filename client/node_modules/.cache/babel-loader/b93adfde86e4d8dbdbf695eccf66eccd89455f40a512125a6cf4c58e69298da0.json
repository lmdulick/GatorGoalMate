{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport './MainPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [userInput, setUserInput] = useState('');\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [replyInput, setReplyInput] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState({});\n  const makeAPICall = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch posts');\n      }\n      const data = await response.json();\n      const reversedPosts = data.reverse();\n      setPosts(reversedPosts);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching posts:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    makeAPICall();\n  }, []);\n  const handleTogglePostForm = () => {\n    setShowPostForm(!showPostForm);\n  };\n  const handleMakePost = async () => {\n    const newPost = {\n      userName: 'Your Name',\n      // Replace with the actual user's name\n      content: userInput,\n      replies: []\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create post');\n      }\n      const result = await response.json();\n      newPost._id = result.postId; // Assign the generated postId from the response\n      setPosts([newPost, ...posts]);\n      setUserInput('');\n      setShowPostForm(false);\n    } catch (error) {\n      console.error('Error creating post:', error.message);\n    }\n  };\n  const handleToggleReplyForm = postId => {\n    setShowReplyForm(prevShowReplyForm => ({\n      ...prevShowReplyForm,\n      [postId]: !prevShowReplyForm[postId]\n    }));\n  };\n  const handleMakeReply = async postId => {\n    const newReply = {\n      userName: 'Your Name',\n      content: replyInput\n    };\n    try {\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/replies`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReply)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add reply');\n      }\n\n      // Update the posts state to reflect the newly added reply\n      const updatedPosts = posts.map(post => {\n        if (post._id === postId) {\n          return {\n            ...post,\n            replies: [newReply, ...post.replies]\n          };\n        }\n        return post;\n      });\n      setPosts(updatedPosts);\n      console.log('Updated Posts:', updatedPosts);\n      setReplyInput('');\n      setShowReplyForm(prevShowReplyForm => ({\n        ...prevShowReplyForm,\n        [postId]: false\n      }));\n    } catch (error) {\n      console.error('Error adding reply:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GatorGoalMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        className: \"profile-link\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"homepage-link\",\n        children: \"HomePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTogglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"What's on your mind?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMakePost,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: post.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), \" \", post.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleReplyForm(post._id),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), showReplyForm[post._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container reply-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: replyInput,\n            onChange: e => setReplyInput(e.target.value),\n            placeholder: \"Your reply...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMakeReply(post._id),\n            children: \"Submit Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }, this), post.replies.slice().reverse().map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: reply.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this), \" \", reply.content]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this))]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"rFrhMRZvlY50wshxWwqRX7MGies=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","v4","uuidv4","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","MainPage","_s","loading","setLoading","userInput","setUserInput","showPostForm","setShowPostForm","posts","setPosts","replyInput","setReplyInput","showReplyForm","setShowReplyForm","makeAPICall","response","fetch","mode","ok","Error","data","json","reversedPosts","reverse","error","console","message","handleTogglePostForm","handleMakePost","newPost","userName","content","replies","method","headers","body","JSON","stringify","result","_id","postId","handleToggleReplyForm","prevShowReplyForm","handleMakeReply","newReply","updatedPosts","map","post","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","value","onChange","e","target","placeholder","slice","reply","index","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/MainPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport './MainPage.css';\r\n\r\nfunction MainPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [replyInput, setReplyInput] = useState('');\r\n  const [showReplyForm, setShowReplyForm] = useState({});\r\n\r\n  const makeAPICall = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts', { mode: 'cors' });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n      const data = await response.json();\r\n      const reversedPosts = data.reverse();\r\n      setPosts(reversedPosts);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeAPICall();\r\n  }, []);\r\n\r\n  const handleTogglePostForm = () => {\r\n    setShowPostForm(!showPostForm);\r\n  };\r\n\r\n  const handleMakePost = async () => {\r\n    const newPost = {\r\n      userName: 'Your Name', // Replace with the actual user's name\r\n      content: userInput,\r\n      replies: [],\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/posts', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newPost),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create post');\r\n      }\r\n\r\n      const result = await response.json();\r\n      newPost._id = result.postId; // Assign the generated postId from the response\r\n      setPosts([newPost, ...posts]);\r\n      setUserInput('');\r\n      setShowPostForm(false);\r\n    } catch (error) {\r\n      console.error('Error creating post:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleToggleReplyForm = (postId) => {\r\n    setShowReplyForm((prevShowReplyForm) => ({\r\n      ...prevShowReplyForm,\r\n      [postId]: !prevShowReplyForm[postId],\r\n    }));\r\n  };\r\n\r\n  const handleMakeReply = async (postId) => {\r\n    const newReply = {\r\n      userName: 'Your Name', \r\n      content: replyInput,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/posts/${postId}/replies`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newReply),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add reply');\r\n      }\r\n\r\n\r\n\r\n      // Update the posts state to reflect the newly added reply\r\n      const updatedPosts = posts.map((post) => {\r\n        if (post._id === postId) {\r\n          return {\r\n            ...post,\r\n            replies: [newReply, ...post.replies],\r\n          };\r\n        }\r\n        return post;\r\n      });\r\n\r\n      setPosts(updatedPosts);\r\n      console.log('Updated Posts:', updatedPosts); \r\n\r\n      setReplyInput('');\r\n\r\n      setShowReplyForm((prevShowReplyForm) => ({\r\n        ...prevShowReplyForm,\r\n        [postId]: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error adding reply:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>GatorGoalMate</h1>\r\n        <Link to=\"/profile\" className=\"profile-link\">Profile</Link>\r\n        <Link to=\"/\" className=\"homepage-link\">HomePage</Link>\r\n      </header>\r\n      <div className=\"post-form\">\r\n        <button onClick={handleTogglePostForm}>Create Post</button>\r\n        {showPostForm && (\r\n          <div className=\"post-container\">\r\n            <textarea\r\n              value={userInput}\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              placeholder=\"What's on your mind?\"\r\n            />\r\n            <button onClick={handleMakePost}>Post</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <div key={post._id} className=\"post-container\">\r\n              <p>\r\n                <strong>{post.userName}</strong> {post.content}\r\n              </p>\r\n              <button onClick={() => handleToggleReplyForm(post._id)}>Reply</button>\r\n              {showReplyForm[post._id] && (\r\n                <div className=\"post-container reply-container\">\r\n                  <textarea\r\n                    value={replyInput}\r\n                    onChange={(e) => setReplyInput(e.target.value)}\r\n                    placeholder=\"Your reply...\"\r\n                  />\r\n                  <button onClick={() => handleMakeReply(post._id)}>Submit Reply</button>\r\n                </div>\r\n              )}\r\n              {/* Displaying replies */}\r\n              {post.replies.slice().reverse().map((reply, index) => (\r\n                <div key={index} className=\"reply\">\r\n                  <strong>{reply.userName}</strong> {reply.content}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}