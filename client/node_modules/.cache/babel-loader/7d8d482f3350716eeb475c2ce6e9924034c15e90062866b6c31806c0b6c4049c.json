{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useContext } from 'react';\nimport { PostContext, PostProvider } from './PostContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendData, setBackendData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userInput, setUserInput] = useState('');\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [replyInput, setReplyInput] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState({});\n  const [image, setImage] = useState(null);\n  //const { setPostImage } = useContext(PostContext);\n  //const { postImage } = useContext(PostContext);\n  const [showAllReplies, setShowAllReplies] = useState({});\n  // State variable for showing or hiding the photo upload form\n  const [showPhotoForm, setShowPhotoForm] = useState(false);\n  // Function for toggling the visibility of the photo upload form\n  const handleTogglePhotoForm = () => {\n    setShowPhotoForm(!showPhotoForm);\n  };\n  // Function for handling the uploaded photos\n  function handlePhotoUpload(files) {\n    let file = files[0]; // get the uploaded file\n    let reader = new FileReader();\n    reader.onloadend = function () {\n      // Update the 'image' state with the data URL of the uploaded image\n      setImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  }\n\n  // const GetPost = async (postId) => {\n  //   try {\n  //     const response = await fetch('http://localhost:3000/api/posts', { mode: 'cors' });\n  //     // http://localhost:3000/api/posts/${postId}\n  //     const postData = await response.json();\n  //     // Update state or do something with postData\n  //     console.log(\"Post data:\", postData);\n  //   } catch (error) {\n  //     console.error('Error fetching post:', error);\n  //   }\n  // };\n\n  // // New useEffect to call GetPost function\n  // useEffect(() => {\n  //   GetPost(/* pass the postId here */);\n  // }, []); // Add dependencies if needed`\n\n  const makeAPICall = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/posts', {\n        mode: 'cors'\n      });\n      const data = await response.json();\n      setBackendData(data.user);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    }\n  };\n  const handleTogglePostForm = () => {\n    setShowPostForm(!showPostForm);\n  };\n  const handleMakePost = () => {\n    //setPostImage(image); \n    const newPost = {\n      id: posts.length + 1,\n      userName: 'Your Name',\n      // Replace with the actual user's name\n      content: userInput,\n      replies: [],\n      image: image\n    };\n    fetch('http://localhost:5001/api/posts', {\n      // need this in handlemakereply\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPost)\n    });\n    setPosts([newPost, ...posts]);\n    setUserInput('');\n    setShowPostForm(false);\n  };\n  const handleToggleReplyForm = postId => {\n    setShowReplyForm(prevShowReplyForm => ({\n      ...prevShowReplyForm,\n      [postId]: !prevShowReplyForm[postId]\n    }));\n  };\n  const handleMakeReply = postId => {\n    // adjust this to save reples to mongoDB\n    const updatedPosts = posts.map(post => post.id === postId ? {\n      ...post,\n      replies: [...post.replies, {\n        userName: 'Your Name',\n        content: replyInput\n      } // Replace with the actual user's name\n      ]\n    } : post);\n\n    // fetch('http://localhost:3000/api/posts', {\n    //   method:'get', // get post\n    //   headers: {'Content-Type':'application/json'}, // add reply to end of array of replies\n    //   body: JSON.stringify(newPost) // update\n    // })\n\n    // fetch('http://localhost:3000/api/posts', {\n    //   method:'put',\n    //   headers: {'Content-Type':'application/json'},\n    //   body: JSON.stringify(newPost)\n    // })\n\n    setPosts(updatedPosts);\n    setReplyInput('');\n    setShowReplyForm(prevShowReplyForm => ({\n      ...prevShowReplyForm,\n      [postId]: false\n    }));\n  };\n  const handleShowAllReplies = postId => {\n    setShowAllReplies(prevShowAllReplies => ({\n      ...prevShowAllReplies,\n      [postId]: true\n    }));\n  };\n  useEffect(() => {\n    makeAPICall();\n  }, []);\n  useEffect(() => {\n    console.log(backendData);\n  }, [backendData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GatorGoalMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [backendData === null || backendData === void 0 ? void 0 : backendData.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.userName\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTogglePostForm,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 5\n        }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: userInput,\n              onChange: e => setUserInput(e.target.value),\n              placeholder: \"What's on your mind?\",\n              style: {\n                backgroundImage: image ? `url(${image})` : 'none',\n                backgroundSize: 'cover',\n                height: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMakePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTogglePhotoForm,\n              children: \"Upload Photos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), showPhotoForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handlePhotoUpload(e.target.files)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: [post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.image,\n            alt: \"User Post\",\n            className: \"post-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-user-name\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleReplyForm(post.id),\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), showReplyForm[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container reply-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: replyInput,\n              onChange: e => setReplyInput(e.target.value),\n              placeholder: \"Your reply...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMakeReply(post.id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 19\n          }, this), post.replies && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 5\n            }, this), showAllReplies[post.id] ? post.replies.slice().reverse().map((reply, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reply\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: reply.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 13\n              }, this), \" \", reply.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 11\n            }, this)) : post.replies.slice().reverse().slice(0, 2).map((reply, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reply\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: reply.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 13\n              }, this), \" \", reply.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 11\n            }, this)), post.replies.length > 2 && !showAllReplies[post.id] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleShowAllReplies(post.id),\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 3\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZtxhsAojy9+pmuxDtbB3uH16YMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PostContext","PostProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","backendData","setBackendData","loading","setLoading","userInput","setUserInput","showPostForm","setShowPostForm","posts","setPosts","replyInput","setReplyInput","showReplyForm","setShowReplyForm","image","setImage","showAllReplies","setShowAllReplies","showPhotoForm","setShowPhotoForm","handleTogglePhotoForm","handlePhotoUpload","files","file","reader","FileReader","onloadend","result","readAsDataURL","makeAPICall","response","fetch","mode","data","json","user","error","console","handleTogglePostForm","handleMakePost","newPost","id","length","userName","content","replies","method","headers","body","JSON","stringify","handleToggleReplyForm","postId","prevShowReplyForm","handleMakeReply","updatedPosts","map","post","handleShowAllReplies","prevShowAllReplies","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","onClick","value","onChange","e","target","placeholder","style","backgroundImage","backgroundSize","height","type","src","alt","slice","reverse","reply","index","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/App.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { useContext } from 'react';\r\nimport { PostContext, PostProvider } from './PostContext';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [backendData, setBackendData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [replyInput, setReplyInput] = useState('');\r\n  const [showReplyForm, setShowReplyForm] = useState({});\r\n  const [image, setImage] = useState(null);\r\n  //const { setPostImage } = useContext(PostContext);\r\n  //const { postImage } = useContext(PostContext);\r\n  const [showAllReplies, setShowAllReplies] = useState({});\r\n    // State variable for showing or hiding the photo upload form\r\n  const [showPhotoForm, setShowPhotoForm] = useState(false);\r\n    // Function for toggling the visibility of the photo upload form\r\n  const handleTogglePhotoForm = () => {\r\n      setShowPhotoForm(!showPhotoForm);\r\n    };\r\n    // Function for handling the uploaded photos\r\n    function handlePhotoUpload(files) {\r\n      let file = files[0]; // get the uploaded file\r\n      let reader = new FileReader();\r\n      reader.onloadend = function() {\r\n          // Update the 'image' state with the data URL of the uploaded image\r\n          setImage(reader.result);\r\n      }\r\n      reader.readAsDataURL(file);\r\n  }\r\n  \r\n\r\n\r\n    \r\n  \r\n  \r\n\r\n\r\n\r\n  // const GetPost = async (postId) => {\r\n  //   try {\r\n  //     const response = await fetch('http://localhost:3000/api/posts', { mode: 'cors' });\r\n  //     // http://localhost:3000/api/posts/${postId}\r\n  //     const postData = await response.json();\r\n  //     // Update state or do something with postData\r\n  //     console.log(\"Post data:\", postData);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching post:', error);\r\n  //   }\r\n  // };\r\n\r\n  // // New useEffect to call GetPost function\r\n  // useEffect(() => {\r\n  //   GetPost(/* pass the postId here */);\r\n  // }, []); // Add dependencies if needed`\r\n\r\n\r\n\r\n  const makeAPICall = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/posts', { mode: 'cors' });\r\n      const data = await response.json();\r\n      setBackendData(data.user);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTogglePostForm = () => {\r\n    setShowPostForm(!showPostForm);\r\n  };\r\n\r\n  const handleMakePost = () => {\r\n    //setPostImage(image); \r\n    const newPost = {\r\n      id: posts.length + 1,\r\n      userName: 'Your Name', // Replace with the actual user's name\r\n      content: userInput,\r\n      replies: [],\r\n      image: image,\r\n    };\r\n\r\n    fetch('http://localhost:5001/api/posts', { // need this in handlemakereply\r\n      method:'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify(newPost)\r\n    })\r\n    \r\n    setPosts([newPost, ...posts]);\r\n    setUserInput('');\r\n    setShowPostForm(false);\r\n  };\r\n  \r\n\r\n  const handleToggleReplyForm = (postId) => {\r\n    setShowReplyForm((prevShowReplyForm) => ({\r\n      ...prevShowReplyForm,\r\n      [postId]: !prevShowReplyForm[postId],\r\n    }));\r\n  };\r\n\r\n  const handleMakeReply = (postId) => { // adjust this to save reples to mongoDB\r\n    const updatedPosts = posts.map((post) =>\r\n      post.id === postId\r\n        ? {\r\n            ...post,\r\n            replies: [\r\n              ...post.replies,\r\n              { userName: 'Your Name', content: replyInput }, // Replace with the actual user's name\r\n            ],\r\n          }\r\n        : post\r\n    );\r\n  \r\n    // fetch('http://localhost:3000/api/posts', {\r\n    //   method:'get', // get post\r\n    //   headers: {'Content-Type':'application/json'}, // add reply to end of array of replies\r\n    //   body: JSON.stringify(newPost) // update\r\n    // })\r\n\r\n    // fetch('http://localhost:3000/api/posts', {\r\n    //   method:'put',\r\n    //   headers: {'Content-Type':'application/json'},\r\n    //   body: JSON.stringify(newPost)\r\n    // })\r\n\r\n    setPosts(updatedPosts);\r\n    setReplyInput('');\r\n    setShowReplyForm((prevShowReplyForm) => ({\r\n      ...prevShowReplyForm,\r\n      [postId]: false,\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleShowAllReplies = (postId) => {\r\n    setShowAllReplies((prevShowAllReplies) => ({\r\n      ...prevShowAllReplies,\r\n      [postId]: true,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeAPICall();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(backendData);\r\n  }, [backendData]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>GatorGoalMate</h1>\r\n      </header>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          {backendData?.map((user, i) => (\r\n            <p key={i}>{user.userName}</p>\r\n          ))}\r\n\r\n<div className=\"post-form\">\r\n    <button onClick={handleTogglePostForm}>Create Post</button>\r\n\r\n    {showPostForm && (\r\n        <div className=\"post-container\">\r\n            <div className=\"post-content\">\r\n                <textarea\r\n                    value={userInput}\r\n                    onChange={(e) => setUserInput(e.target.value)}\r\n                    placeholder=\"What's on your mind?\"\r\n                    style={{\r\n                        backgroundImage: image ? `url(${image})` : 'none',\r\n                        backgroundSize: 'cover',\r\n                        height: '200px',\r\n                    }}\r\n                />\r\n            </div>\r\n            <button onClick={handleMakePost}>Post</button>\r\n\r\n            <div className=\"photo-form\">\r\n                <button onClick={handleTogglePhotoForm}>Upload Photos</button>\r\n\r\n                {showPhotoForm && (\r\n                    <div className=\"photo-container\">\r\n                        <input\r\n                            type=\"file\"\r\n                            onChange={(e) => handlePhotoUpload(e.target.files)}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )}\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div>\r\n                        {posts.map((post) => (\r\n                <div key={post.id} className=\"post-container\">\r\n                  \r\n                  {post.image && (\r\n                    <img src={post.image} alt=\"User Post\" className=\"post-image\" />\r\n                  )}\r\n                  \r\n                  <p className=\"post-user-name\"><strong>{post.userName}</strong></p>\r\n                  <p>{post.content}</p>\r\n\r\n                <button onClick={() => handleToggleReplyForm(post.id)}>\r\n                  Reply\r\n                </button>\r\n\r\n                {showReplyForm[post.id] && (\r\n                  <div className=\"post-container reply-container\">\r\n                    <textarea\r\n                      value={replyInput}\r\n                      onChange={(e) => setReplyInput(e.target.value)}\r\n                      placeholder=\"Your reply...\"\r\n                    />\r\n                    <button onClick={() => handleMakeReply(post.id)}>\r\n                      Reply\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n{post.replies && (\r\n  <div>\r\n    <h3>Comments</h3>\r\n    {showAllReplies[post.id]\r\n      ? post.replies.slice().reverse().map((reply, index) => (\r\n          <p key={index} className=\"reply\">\r\n            <strong>{reply.userName}</strong> {reply.content}\r\n          </p>\r\n        ))\r\n      : post.replies.slice().reverse().slice(0, 2).map((reply, index) => (\r\n          <p key={index} className=\"reply\">\r\n            <strong>{reply.userName}</strong> {reply.content}\r\n          </p>\r\n        ))}\r\n\r\n    {post.replies.length > 2 && !showAllReplies[post.id] && (\r\n      <button onClick={() => handleShowAllReplies(post.id)}>\r\n        ...\r\n      </button>\r\n    )}\r\n  </div>\r\n)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAK1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxC;EACA;EACA,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD;EACF,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD;EACF,MAAM8B,qBAAqB,GAAGA,CAAA,KAAM;IAChCD,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EACD;EACA,SAASG,iBAAiBA,CAACC,KAAK,EAAE;IAChC,IAAIC,IAAI,GAAGD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,IAAIE,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,SAAS,GAAG,YAAW;MAC1B;MACAX,QAAQ,CAACS,MAAM,CAACG,MAAM,CAAC;IAC3B,CAAC;IACDH,MAAM,CAACI,aAAa,CAACL,IAAI,CAAC;EAC9B;;EAUA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAIA,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MACjF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCjC,cAAc,CAACgC,IAAI,CAACE,IAAI,CAAC;MACzBhC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmC,oBAAoB,GAAGA,CAAA,KAAM;IACjC/B,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEjC,KAAK,CAACkC,MAAM,GAAG,CAAC;MACpBC,QAAQ,EAAE,WAAW;MAAE;MACvBC,OAAO,EAAExC,SAAS;MAClByC,OAAO,EAAE,EAAE;MACX/B,KAAK,EAAEA;IACT,CAAC;IAEDiB,KAAK,CAAC,iCAAiC,EAAE;MAAE;MACzCe,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;IAC9B,CAAC,CAAC;IAEF/B,QAAQ,CAAC,CAAC+B,OAAO,EAAE,GAAGhC,KAAK,CAAC,CAAC;IAC7BH,YAAY,CAAC,EAAE,CAAC;IAChBE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAGD,MAAM4C,qBAAqB,GAAIC,MAAM,IAAK;IACxCvC,gBAAgB,CAAEwC,iBAAiB,KAAM;MACvC,GAAGA,iBAAiB;MACpB,CAACD,MAAM,GAAG,CAACC,iBAAiB,CAACD,MAAM;IACrC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,eAAe,GAAIF,MAAM,IAAK;IAAE;IACpC,MAAMG,YAAY,GAAG/C,KAAK,CAACgD,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAAChB,EAAE,KAAKW,MAAM,GACd;MACE,GAAGK,IAAI;MACPZ,OAAO,EAAE,CACP,GAAGY,IAAI,CAACZ,OAAO,EACf;QAAEF,QAAQ,EAAE,WAAW;QAAEC,OAAO,EAAElC;MAAW,CAAC,CAAE;MAAA;IAEpD,CAAC,GACD+C,IACN,CAAC;;IAED;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEAhD,QAAQ,CAAC8C,YAAY,CAAC;IACtB5C,aAAa,CAAC,EAAE,CAAC;IACjBE,gBAAgB,CAAEwC,iBAAiB,KAAM;MACvC,GAAGA,iBAAiB;MACpB,CAACD,MAAM,GAAG;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;EAGD,MAAMM,oBAAoB,GAAIN,MAAM,IAAK;IACvCnC,iBAAiB,CAAE0C,kBAAkB,KAAM;MACzC,GAAGA,kBAAkB;MACrB,CAACP,MAAM,GAAG;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;EAED/D,SAAS,CAAC,MAAM;IACdwC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENxC,SAAS,CAAC,MAAM;IACdgD,OAAO,CAACuB,GAAG,CAAC5D,WAAW,CAAC;EAC1B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA;IAAKkE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnE,OAAA;MAAAmE,QAAA,eACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EAERhE,OAAO,gBACNP,OAAA;MAAAmE,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBvE,OAAA,CAAAE,SAAA;MAAAiE,QAAA,GACG9D,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEwD,GAAG,CAAC,CAACrB,IAAI,EAAEgC,CAAC,kBACxBxE,OAAA;QAAAmE,QAAA,EAAY3B,IAAI,CAACQ;MAAQ,GAAjBwB,CAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC9B,CAAC,eAEZvE,OAAA;QAAKkE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtBnE,OAAA;UAAQyE,OAAO,EAAE9B,oBAAqB;UAAAwB,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAE1D5D,YAAY,iBACTX,OAAA;UAAKkE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BnE,OAAA;YAAKkE,SAAS,EAAC,cAAc;YAAAC,QAAA,eACzBnE,OAAA;cACI0E,KAAK,EAAEjE,SAAU;cACjBkE,QAAQ,EAAGC,CAAC,IAAKlE,YAAY,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC9CI,WAAW,EAAC,sBAAsB;cAClCC,KAAK,EAAE;gBACHC,eAAe,EAAE7D,KAAK,GAAI,OAAMA,KAAM,GAAE,GAAG,MAAM;gBACjD8D,cAAc,EAAE,OAAO;gBACvBC,MAAM,EAAE;cACZ;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNvE,OAAA;YAAQyE,OAAO,EAAE7B,cAAe;YAAAuB,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAE9CvE,OAAA;YAAKkE,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnE,OAAA;cAAQyE,OAAO,EAAEhD,qBAAsB;cAAA0C,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAE7DhD,aAAa,iBACVvB,OAAA;cAAKkE,SAAS,EAAC,iBAAiB;cAAAC,QAAA,eAC5BnE,OAAA;gBACImF,IAAI,EAAC,MAAM;gBACXR,QAAQ,EAAGC,CAAC,IAAKlD,iBAAiB,CAACkD,CAAC,CAACC,MAAM,CAAClD,KAAK;cAAE;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAOkBvE,OAAA;QAAAmE,QAAA,EACCtD,KAAK,CAACgD,GAAG,CAAEC,IAAI,iBACxB9D,OAAA;UAAmBkE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAE1CL,IAAI,CAAC3C,KAAK,iBACTnB,OAAA;YAAKoF,GAAG,EAAEtB,IAAI,CAAC3C,KAAM;YAACkE,GAAG,EAAC,WAAW;YAACnB,SAAS,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC/D,eAEDvE,OAAA;YAAGkE,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAACnE,OAAA;cAAAmE,QAAA,EAASL,IAAI,CAACd;YAAQ;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAClEvE,OAAA;YAAAmE,QAAA,EAAIL,IAAI,CAACb;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEvBvE,OAAA;YAAQyE,OAAO,EAAEA,CAAA,KAAMjB,qBAAqB,CAACM,IAAI,CAAChB,EAAE,CAAE;YAAAqB,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAERtD,aAAa,CAAC6C,IAAI,CAAChB,EAAE,CAAC,iBACrB9C,OAAA;YAAKkE,SAAS,EAAC,gCAAgC;YAAAC,QAAA,gBAC7CnE,OAAA;cACE0E,KAAK,EAAE3D,UAAW;cAClB4D,QAAQ,EAAGC,CAAC,IAAK5D,aAAa,CAAC4D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC/CI,WAAW,EAAC;YAAe;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACFvE,OAAA;cAAQyE,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACG,IAAI,CAAChB,EAAE,CAAE;cAAAqB,QAAA,EAAC;YAEjD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN,EAEhBT,IAAI,CAACZ,OAAO,iBACXlD,OAAA;YAAAmE,QAAA,gBACEnE,OAAA;cAAAmE,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChBlD,cAAc,CAACyC,IAAI,CAAChB,EAAE,CAAC,GACpBgB,IAAI,CAACZ,OAAO,CAACoC,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC1B,GAAG,CAAC,CAAC2B,KAAK,EAAEC,KAAK,kBAC9CzF,OAAA;cAAekE,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAC9BnE,OAAA;gBAAAmE,QAAA,EAASqB,KAAK,CAACxC;cAAQ;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,KAAC,EAACiB,KAAK,CAACvC,OAAO;YAAA,GAD1CwC,KAAK;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACJ,CAAC,GACFT,IAAI,CAACZ,OAAO,CAACoC,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAACD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACzB,GAAG,CAAC,CAAC2B,KAAK,EAAEC,KAAK,kBAC1DzF,OAAA;cAAekE,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAC9BnE,OAAA;gBAAAmE,QAAA,EAASqB,KAAK,CAACxC;cAAQ;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,KAAC,EAACiB,KAAK,CAACvC,OAAO;YAAA,GAD1CwC,KAAK;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACJ,CAAC,EAELT,IAAI,CAACZ,OAAO,CAACH,MAAM,GAAG,CAAC,IAAI,CAAC1B,cAAc,CAACyC,IAAI,CAAChB,EAAE,CAAC,iBAClD9C,OAAA;cAAQyE,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAACD,IAAI,CAAChB,EAAE,CAAE;cAAAqB,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACN;QAAA,GA/CyBT,IAAI,CAAChB,EAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgDd,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnE,EAAA,CArQQD,GAAG;AAAAuF,EAAA,GAAHvF,GAAG;AAsQZ,eAAeA,GAAG;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}