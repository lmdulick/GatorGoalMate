{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PasswordMask from 'react-password-mask';\nimport MainPage from './MainPage';\nimport logo from './GatorGoalMateLogo.png';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('Login response:', data);\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to login');\n      }\n      if (data.user) {\n        console.log('Login successful:', data.user);\n        navigate(\"/main-page\", {\n          state: {\n            username\n          }\n        });\n      } else {\n        console.error('User data not found in response');\n        setErrorMessage('Invalid username or password. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error.message);\n      setErrorMessage('Invalid username or password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"GatorGoalMate Logo\",\n        className: \"login-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"login-title\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"homepage-link\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            className: \"login-input\",\n            placeholder: \"Username\",\n            required: true,\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordMask, {\n            id: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-additional-options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"8U378PBpQ7JiNpIRa9lTFGoSkAQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","PasswordMask","MainPage","logo","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","Error","message","user","state","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","to","type","id","placeholder","required","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PasswordMask from 'react-password-mask';\r\nimport MainPage from './MainPage';\r\nimport logo from './GatorGoalMateLogo.png'; \r\nimport './Login.css'; \r\n\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n  \r\n      console.log('Login response:', data);\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to login');\r\n      }\r\n  \r\n      if (data.user) {\r\n        console.log('Login successful:', data.user);\r\n        navigate(\"/main-page\", {state : {username}});\r\n      } else {\r\n        console.error('User data not found in response');\r\n        setErrorMessage('Invalid username or password. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in:', error.message);\r\n      setErrorMessage('Invalid username or password. Please try again.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-content\">\r\n        <img src={logo} alt=\"GatorGoalMate Logo\" className=\"login-logo\" />\r\n        <form onSubmit={handleLogin} className=\"login-form\">\r\n          <h2 className=\"login-title\">Login</h2>\r\n          <Link to=\"/\" className=\"homepage-link\">Back</Link>\r\n          <div className=\"login-input-group\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              className=\"login-input\"\r\n              placeholder=\"Username\"\r\n              required\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <PasswordMask\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n          <button type=\"submit\" className=\"login-btn\">Login</button>\r\n          <div className=\"login-additional-options\">\r\n            {/* Additional options (e.g., forgot password, sign up) */}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}