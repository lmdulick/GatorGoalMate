{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './ProfilePage.css';\nimport logo from './GatorGoalMateLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const username = location.state.username;\n  const [profile, setProfile] = useState(null);\n  const [isEditing, setIsEditing] = useState({\n    firstName: false,\n    lastName: false,\n    username: false,\n    password: false\n  });\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    username: username,\n    password: ''\n  });\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [changesMade, setChangesMade] = useState(false);\n\n  // search through 'Collection-Profile' to find the profile with the given username\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/profile', {\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch profiles');\n        }\n        const profiles = await response.json();\n        const foundProfile = profiles.find(profile => profile.username === username);\n        if (foundProfile) {\n          setProfile(foundProfile);\n          setValues({\n            firstName: foundProfile.firstName,\n            lastName: foundProfile.lastName,\n            email: foundProfile.email,\n            username: foundProfile.username,\n            password: foundProfile.password\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching profile:', error.message);\n      }\n    };\n    fetchProfile();\n  }, [username]);\n  const handleEdit = field => {\n    setIsEditing(prevState => ({\n      ...prevState,\n      [field]: true\n    }));\n    setChangesMade(true); // Indicate that changes have been made\n  };\n  const handleChange = (field, event) => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [field]: event.target.value\n    }));\n    setChangesMade(true); // Indicate that changes have been made\n  };\n\n  // EDIT a user's profile --- function still in progress\n  const handleSave = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save changes');\n      }\n      const updatedProfile = await response.json();\n      setProfile(updatedProfile);\n      setChangesMade(false);\n      setIsEditing({\n        firstName: false,\n        lastName: false,\n        username: false,\n        password: false\n      });\n      console.log(\"Changes successfully saved. \");\n    } catch (error) {\n      console.error('Error saving changes:', error.message);\n    }\n  };\n\n  // DELETE a user's profile after clicking 'Delete Account' button\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete profile');\n      }\n\n      // Redirect to the opening page after successful deletion\n      navigate('/');\n    } catch (error) {\n      console.error('Error deleting profile:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-button\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/main-page\",\n        state: {\n          username\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: \"Profile Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), values.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this), profile && ['firstName', 'lastName', 'username', 'password'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.charAt(0).toUpperCase() + field.slice(1).replace('Name', ' Name') + ':'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), isEditing[field] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === 'password' ? 'password' : 'text' // Use password type for the password field\n          ,\n          value: values[field],\n          onChange: e => handleChange(field, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), changesMade && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: () => handleSave(field),\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: profile[field]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), !isEditing[field] && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => handleEdit(field),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)]\n    }, field, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setShowDeleteModal(true),\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-pop-up\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete your account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteModal(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"AQeIw0uSw+odTh52QZEubcfRYQw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Link","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfilePage","_s","navigate","location","username","state","profile","setProfile","isEditing","setIsEditing","firstName","lastName","password","values","setValues","email","showDeleteModal","setShowDeleteModal","changesMade","setChangesMade","fetchProfile","response","fetch","mode","ok","Error","profiles","json","foundProfile","find","error","console","message","handleEdit","field","prevState","handleChange","event","prevValues","target","value","handleSave","_id","method","headers","body","JSON","stringify","updatedProfile","log","handleDelete","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","charAt","toUpperCase","slice","replace","type","onChange","e","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './ProfilePage.css';\r\nimport logo from './GatorGoalMateLogo.png';\r\n\r\nfunction ProfilePage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const username = location.state.username;\r\n\r\n  const [profile, setProfile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    username: false,\r\n    password: false,\r\n  });\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    username: username,\r\n    password: '',\r\n  });\r\n\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [changesMade, setChangesMade] = useState(false);\r\n\r\n  // search through 'Collection-Profile' to find the profile with the given username\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/profile', { mode: 'cors' });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch profiles');\r\n        }\r\n        const profiles = await response.json();\r\n        const foundProfile = profiles.find(profile => profile.username === username);\r\n        \r\n        if (foundProfile) {\r\n          setProfile(foundProfile);\r\n          setValues({\r\n            firstName: foundProfile.firstName,\r\n            lastName: foundProfile.lastName,\r\n            email: foundProfile.email,\r\n            username: foundProfile.username,\r\n            password: foundProfile.password,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error.message);\r\n      }\r\n    };\r\n  \r\n    fetchProfile();\r\n  }, [username]);\r\n  \r\n\r\n  const handleEdit = (field) => {\r\n    setIsEditing(prevState => ({\r\n      ...prevState,\r\n      [field]: true,\r\n    }));\r\n    setChangesMade(true); // Indicate that changes have been made\r\n  };\r\n  \r\n\r\n  const handleChange = (field, event) => {\r\n    setValues(prevValues => ({\r\n      ...prevValues,\r\n      [field]: event.target.value,\r\n    }));\r\n    setChangesMade(true); // Indicate that changes have been made\r\n  };\r\n  \r\n\r\n  // EDIT a user's profile --- function still in progress\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save changes');\r\n      }\r\n\r\n\r\n      const updatedProfile = await response.json();\r\n      setProfile(updatedProfile);\r\n\r\n      setChangesMade(false);\r\n      setIsEditing({\r\n        firstName: false,\r\n        lastName: false,\r\n        username: false,\r\n        password: false,\r\n      });\r\n\r\n      console.log(\"Changes successfully saved. \");\r\n\r\n    } catch (error) {\r\n      console.error('Error saving changes:', error.message);\r\n    }\r\n  };\r\n\r\n  // DELETE a user's profile after clicking 'Delete Account' button\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete profile');\r\n      }\r\n  \r\n      // Redirect to the opening page after successful deletion\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      \r\n        <button className=\"sidebar-button\">\r\n          <Link to=\"/main-page\" state={{ username }}>\r\n            <img src={logo} alt=\"Logo\" className=\"logo-image\" />\r\n          </Link>\r\n         </button>\r\n\r\n         <div className=\"profile-header\">Profile Information</div>\r\n\r\n         <div className=\"profile-detail\">\r\n        <label>Email:</label>\r\n            {values.email}\r\n      </div>\r\n\r\n      {profile && ['firstName', 'lastName', 'username', 'password'].map((field) => (\r\n  <div className=\"profile-detail\" key={field}>\r\n    <label>{field.charAt(0).toUpperCase() + field.slice(1).replace('Name', ' Name') + ':'}</label>\r\n    {isEditing[field] ? (\r\n      <>\r\n        <input\r\n          type={field === 'password' ? 'password' : 'text'} // Use password type for the password field\r\n          value={values[field]}\r\n          onChange={(e) => handleChange(field, e)}\r\n        />\r\n        {changesMade && (\r\n          <button className=\"save-button\" onClick={() => handleSave(field)}>Save Changes</button>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <span>{profile[field]}</span>\r\n    )}\r\n    {!isEditing[field] && (\r\n      <button className=\"edit-button\" onClick={() => handleEdit(field)}>\r\n        Edit\r\n      </button>\r\n    )}\r\n  </div>\r\n))}\r\n\r\n\r\n      <div className=\"profile-actions\">\r\n      <Link to=\"/\" className=\"button\">Logout</Link>\r\n        <button className=\"button\" onClick={() => setShowDeleteModal(true)}>Delete Account</button>\r\n      </div>\r\n\r\n      {showDeleteModal && (\r\n        <div className=\"delete-pop-up\">\r\n          <div className=\"delete-content\">\r\n            <p>Are you sure you want to delete your account?</p>\r\n            <button onClick={handleDelete}>Yes</button>\r\n            <button onClick={() => setShowDeleteModal(false)}>No</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAACD,QAAQ;EAExC,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC;IACzCoB,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfP,QAAQ,EAAE,KAAK;IACfQ,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC;IACnCoB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZI,KAAK,EAAE,EAAE;IACTX,QAAQ,EAAEA,QAAQ;IAClBQ,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACI,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM6B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;QACnF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACtC,MAAMC,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACvB,OAAO,IAAIA,OAAO,CAACF,QAAQ,KAAKA,QAAQ,CAAC;QAE5E,IAAIwB,YAAY,EAAE;UAChBrB,UAAU,CAACqB,YAAY,CAAC;UACxBd,SAAS,CAAC;YACRJ,SAAS,EAAEkB,YAAY,CAAClB,SAAS;YACjCC,QAAQ,EAAEiB,YAAY,CAACjB,QAAQ;YAC/BI,KAAK,EAAEa,YAAY,CAACb,KAAK;YACzBX,QAAQ,EAAEwB,YAAY,CAACxB,QAAQ;YAC/BQ,QAAQ,EAAEgB,YAAY,CAAChB;UACzB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACzD;IACF,CAAC;IAEDZ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAGd,MAAM6B,UAAU,GAAIC,KAAK,IAAK;IAC5BzB,YAAY,CAAC0B,SAAS,KAAK;MACzB,GAAGA,SAAS;MACZ,CAACD,KAAK,GAAG;IACX,CAAC,CAAC,CAAC;IACHf,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;EAGD,MAAMiB,YAAY,GAAGA,CAACF,KAAK,EAAEG,KAAK,KAAK;IACrCvB,SAAS,CAACwB,UAAU,KAAK;MACvB,GAAGA,UAAU;MACb,CAACJ,KAAK,GAAGG,KAAK,CAACE,MAAM,CAACC;IACxB,CAAC,CAAC,CAAC;IACHrB,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;;EAGD;EACA,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoChB,OAAO,CAACoC,GAAI,EAAC,EAAE;QAC/EC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClC,MAAM;MAC7B,CAAC,CAAC;MAEF,IAAI,CAACQ,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAGA,MAAMuB,cAAc,GAAG,MAAM3B,QAAQ,CAACM,IAAI,CAAC,CAAC;MAC5CpB,UAAU,CAACyC,cAAc,CAAC;MAE1B7B,cAAc,CAAC,KAAK,CAAC;MACrBV,YAAY,CAAC;QACXC,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE,KAAK;QACfP,QAAQ,EAAE,KAAK;QACfQ,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFmB,OAAO,CAACkB,GAAG,CAAC,8BAA8B,CAAC;IAE7C,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM7B,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoChB,OAAO,CAACoC,GAAI,EAAC,EAAE;QAC/EC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACtB,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;;MAEA;MACAvB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD;EACF,CAAC;EAED,oBACEnC,OAAA;IAAKsD,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAEzBvD,OAAA;MAAQsD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAChCvD,OAAA,CAACH,IAAI;QAAC2D,EAAE,EAAC,YAAY;QAAChD,KAAK,EAAE;UAAED;QAAS,CAAE;QAAAgD,QAAA,eACxCvD,OAAA;UAAKyD,GAAG,EAAE3D,IAAK;UAAC4D,GAAG,EAAC,MAAM;UAACJ,SAAS,EAAC;QAAY;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET9D,OAAA;MAAKsD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEzD9D,OAAA;MAAKsD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAChCvD,OAAA;QAAAuD,QAAA,EAAO;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAChB9C,MAAM,CAACE,KAAK;IAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAELrD,OAAO,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAACsD,GAAG,CAAE1B,KAAK,iBAC5ErC,OAAA;MAAKsD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BvD,OAAA;QAAAuD,QAAA,EAAQlB,KAAK,CAAC2B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG5B,KAAK,CAAC6B,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7FnD,SAAS,CAAC0B,KAAK,CAAC,gBACfrC,OAAA,CAAAE,SAAA;QAAAqD,QAAA,gBACEvD,OAAA;UACEoE,IAAI,EAAE/B,KAAK,KAAK,UAAU,GAAG,UAAU,GAAG,MAAO,CAAC;UAAA;UAClDM,KAAK,EAAE3B,MAAM,CAACqB,KAAK,CAAE;UACrBgC,QAAQ,EAAGC,CAAC,IAAK/B,YAAY,CAACF,KAAK,EAAEiC,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,EACDzC,WAAW,iBACVrB,OAAA;UAAQsD,SAAS,EAAC,aAAa;UAACiB,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAACP,KAAK,CAAE;UAAAkB,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACvF;MAAA,eACD,CAAC,gBAEH9D,OAAA;QAAAuD,QAAA,EAAO9C,OAAO,CAAC4B,KAAK;MAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC7B,EACA,CAACnD,SAAS,CAAC0B,KAAK,CAAC,iBAChBrC,OAAA;QAAQsD,SAAS,EAAC,aAAa;QAACiB,OAAO,EAAEA,CAAA,KAAMnC,UAAU,CAACC,KAAK,CAAE;QAAAkB,QAAA,EAAC;MAElE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA,GApBkCzB,KAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBrC,CACN,CAAC,eAGI9D,OAAA;MAAKsD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAChCvD,OAAA,CAACH,IAAI;QAAC2D,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3C9D,OAAA;QAAQsD,SAAS,EAAC,QAAQ;QAACiB,OAAO,EAAEA,CAAA,KAAMnD,kBAAkB,CAAC,IAAI,CAAE;QAAAmC,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,EAEL3C,eAAe,iBACdnB,OAAA;MAAKsD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BvD,OAAA;QAAKsD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvD,OAAA;UAAAuD,QAAA,EAAG;QAA6C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpD9D,OAAA;UAAQuE,OAAO,EAAElB,YAAa;UAAAE,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3C9D,OAAA;UAAQuE,OAAO,EAAEA,CAAA,KAAMnD,kBAAkB,CAAC,KAAK,CAAE;UAAAmC,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1D,EAAA,CAtLQD,WAAW;EAAA,QACDP,WAAW,EACXD,WAAW;AAAA;AAAA6E,EAAA,GAFrBrE,WAAW;AAwLpB,eAAeA,WAAW;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}