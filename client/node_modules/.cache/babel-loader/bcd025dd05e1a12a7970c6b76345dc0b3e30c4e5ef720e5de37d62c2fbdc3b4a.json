{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendData, setBackendData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userInput, setUserInput] = useState('');\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [replyInput, setReplyInput] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState({});\n  const [showAllReplies, setShowAllReplies] = useState({});\n  // State variable for showing or hiding the photo upload form\n  const [showPhotoForm, setShowPhotoForm] = useState(false);\n  // Function for toggling the visibility of the photo upload form\n  const handleTogglePhotoForm = () => {\n    setShowPhotoForm(!showPhotoForm);\n  };\n  // Function for handling the uploaded photos\n  function handlePhotoUpload(files) {\n    let file = files[0]; // get the uploaded file\n    let reader = new FileReader();\n    reader.onloadend = function () {\n      let img = document.createElement('img');\n      img.src = reader.result;\n      img.style.width = '350px'; // Set the width of the image\n      img.style.height = '350px'; // Set the height of the image\n      document.body.appendChild(img); // Append the image to the body of your site\n    };\n    reader.readAsDataURL(file);\n  }\n\n  // const GetPost = async (postId) => {\n  //   try {\n  //     const response = await fetch('http://localhost:3000/api/posts', { mode: 'cors' });\n  //     // http://localhost:3000/api/posts/${postId}\n  //     const postData = await response.json();\n  //     // Update state or do something with postData\n  //     console.log(\"Post data:\", postData);\n  //   } catch (error) {\n  //     console.error('Error fetching post:', error);\n  //   }\n  // };\n\n  // // New useEffect to call GetPost function\n  // useEffect(() => {\n  //   GetPost(/* pass the postId here */);\n  // }, []); // Add dependencies if needed`\n\n  const makeAPICall = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/posts', {\n        mode: 'cors'\n      });\n      const data = await response.json();\n      setBackendData(data.user);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    }\n  };\n  const handleTogglePostForm = () => {\n    setShowPostForm(!showPostForm);\n  };\n  const handleMakePost = () => {\n    const newPost = {\n      id: posts.length + 1,\n      userName: 'Your Name',\n      // Replace with the actual user's name\n      content: userInput,\n      replies: []\n    };\n    fetch('http://localhost:5001/api/posts', {\n      // need this in handlemakereply\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPost)\n    });\n    setPosts([newPost, ...posts]);\n    setUserInput('');\n    setShowPostForm(false);\n  };\n  const handleToggleReplyForm = postId => {\n    setShowReplyForm(prevShowReplyForm => ({\n      ...prevShowReplyForm,\n      [postId]: !prevShowReplyForm[postId]\n    }));\n  };\n  const handleMakeReply = postId => {\n    // adjust this to save reples to mongoDB\n    const updatedPosts = posts.map(post => post.id === postId ? {\n      ...post,\n      replies: [...post.replies, {\n        userName: 'Your Name',\n        content: replyInput\n      } // Replace with the actual user's name\n      ]\n    } : post);\n\n    // fetch('http://localhost:3000/api/posts', {\n    //   method:'get', // get post\n    //   headers: {'Content-Type':'application/json'}, // add reply to end of array of replies\n    //   body: JSON.stringify(newPost) // update\n    // })\n\n    // fetch('http://localhost:3000/api/posts', {\n    //   method:'put',\n    //   headers: {'Content-Type':'application/json'},\n    //   body: JSON.stringify(newPost)\n    // })\n\n    setPosts(updatedPosts);\n    setReplyInput('');\n    setShowReplyForm(prevShowReplyForm => ({\n      ...prevShowReplyForm,\n      [postId]: false\n    }));\n  };\n  const handleShowAllReplies = postId => {\n    setShowAllReplies(prevShowAllReplies => ({\n      ...prevShowAllReplies,\n      [postId]: true\n    }));\n  };\n  useEffect(() => {\n    makeAPICall();\n  }, []);\n  useEffect(() => {\n    console.log(backendData);\n  }, [backendData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GatorGoalMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [backendData === null || backendData === void 0 ? void 0 : backendData.map((user, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.userName\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTogglePostForm,\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 3\n        }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            placeholder: \"What's on your mind?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMakePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTogglePhotoForm,\n              children: \"Upload Photos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 9\n            }, this), showPhotoForm && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handlePhotoUpload(e.target.files)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), \" \", post.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleReplyForm(post.id),\n            children: \"Reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), showReplyForm[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container reply-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: replyInput,\n              onChange: e => setReplyInput(e.target.value),\n              placeholder: \"Your reply...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMakeReply(post.id),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }, this), post.replies && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 5\n            }, this), showAllReplies[post.id] ? post.replies.slice().reverse().map((reply, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reply\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: reply.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 13\n              }, this), \" \", reply.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 11\n            }, this)) : post.replies.slice().reverse().slice(0, 2).map((reply, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"reply\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: reply.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 13\n              }, this), \" \", reply.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 11\n            }, this)), post.replies.length > 2 && !showAllReplies[post.id] && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleShowAllReplies(post.id),\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 3\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kdSVXpYFU8uAYJBOljT3A6JrP2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","backendData","setBackendData","loading","setLoading","userInput","setUserInput","showPostForm","setShowPostForm","posts","setPosts","replyInput","setReplyInput","showReplyForm","setShowReplyForm","showAllReplies","setShowAllReplies","showPhotoForm","setShowPhotoForm","handleTogglePhotoForm","handlePhotoUpload","files","file","reader","FileReader","onloadend","img","document","createElement","src","result","style","width","height","body","appendChild","readAsDataURL","makeAPICall","response","fetch","mode","data","json","user","error","console","handleTogglePostForm","handleMakePost","newPost","id","length","userName","content","replies","method","headers","JSON","stringify","handleToggleReplyForm","postId","prevShowReplyForm","handleMakeReply","updatedPosts","map","post","handleShowAllReplies","prevShowAllReplies","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","onClick","value","onChange","e","target","placeholder","type","slice","reverse","reply","index","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/App.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [backendData, setBackendData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [replyInput, setReplyInput] = useState('');\r\n  const [showReplyForm, setShowReplyForm] = useState({});\r\n  const [showAllReplies, setShowAllReplies] = useState({});\r\n    // State variable for showing or hiding the photo upload form\r\n  const [showPhotoForm, setShowPhotoForm] = useState(false);\r\n    // Function for toggling the visibility of the photo upload form\r\n  const handleTogglePhotoForm = () => {\r\n      setShowPhotoForm(!showPhotoForm);\r\n    };\r\n    // Function for handling the uploaded photos\r\n    function handlePhotoUpload(files) {\r\n      let file = files[0]; // get the uploaded file\r\n      let reader = new FileReader();\r\n      reader.onloadend = function() {\r\n          let img = document.createElement('img');\r\n          img.src = reader.result;\r\n          img.style.width = '350px'; // Set the width of the image\r\n          img.style.height = '350px'; // Set the height of the image\r\n          document.body.appendChild(img); // Append the image to the body of your site\r\n      }\r\n      reader.readAsDataURL(file);\r\n  }\r\n\r\n\r\n    \r\n  \r\n  \r\n\r\n\r\n\r\n  // const GetPost = async (postId) => {\r\n  //   try {\r\n  //     const response = await fetch('http://localhost:3000/api/posts', { mode: 'cors' });\r\n  //     // http://localhost:3000/api/posts/${postId}\r\n  //     const postData = await response.json();\r\n  //     // Update state or do something with postData\r\n  //     console.log(\"Post data:\", postData);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching post:', error);\r\n  //   }\r\n  // };\r\n\r\n  // // New useEffect to call GetPost function\r\n  // useEffect(() => {\r\n  //   GetPost(/* pass the postId here */);\r\n  // }, []); // Add dependencies if needed`\r\n\r\n\r\n\r\n  const makeAPICall = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/posts', { mode: 'cors' });\r\n      const data = await response.json();\r\n      setBackendData(data.user);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTogglePostForm = () => {\r\n    setShowPostForm(!showPostForm);\r\n  };\r\n\r\n  const handleMakePost = () => { \r\n    const newPost = {\r\n      id: posts.length + 1,\r\n      userName: 'Your Name', // Replace with the actual user's name\r\n      content: userInput,\r\n      replies: [],\r\n    };\r\n\r\n    fetch('http://localhost:5001/api/posts', { // need this in handlemakereply\r\n      method:'post',\r\n      headers: {'Content-Type':'application/json'},\r\n      body: JSON.stringify(newPost)\r\n    })\r\n    \r\n    setPosts([newPost, ...posts]);\r\n    setUserInput('');\r\n    setShowPostForm(false);\r\n  };\r\n  \r\n\r\n  const handleToggleReplyForm = (postId) => {\r\n    setShowReplyForm((prevShowReplyForm) => ({\r\n      ...prevShowReplyForm,\r\n      [postId]: !prevShowReplyForm[postId],\r\n    }));\r\n  };\r\n\r\n  const handleMakeReply = (postId) => { // adjust this to save reples to mongoDB\r\n    const updatedPosts = posts.map((post) =>\r\n      post.id === postId\r\n        ? {\r\n            ...post,\r\n            replies: [\r\n              ...post.replies,\r\n              { userName: 'Your Name', content: replyInput }, // Replace with the actual user's name\r\n            ],\r\n          }\r\n        : post\r\n    );\r\n  \r\n    // fetch('http://localhost:3000/api/posts', {\r\n    //   method:'get', // get post\r\n    //   headers: {'Content-Type':'application/json'}, // add reply to end of array of replies\r\n    //   body: JSON.stringify(newPost) // update\r\n    // })\r\n\r\n    // fetch('http://localhost:3000/api/posts', {\r\n    //   method:'put',\r\n    //   headers: {'Content-Type':'application/json'},\r\n    //   body: JSON.stringify(newPost)\r\n    // })\r\n\r\n    setPosts(updatedPosts);\r\n    setReplyInput('');\r\n    setShowReplyForm((prevShowReplyForm) => ({\r\n      ...prevShowReplyForm,\r\n      [postId]: false,\r\n    }));\r\n  };\r\n  \r\n\r\n  const handleShowAllReplies = (postId) => {\r\n    setShowAllReplies((prevShowAllReplies) => ({\r\n      ...prevShowAllReplies,\r\n      [postId]: true,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeAPICall();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(backendData);\r\n  }, [backendData]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>GatorGoalMate</h1>\r\n      </header>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          {backendData?.map((user, i) => (\r\n            <p key={i}>{user.userName}</p>\r\n          ))}\r\n\r\n<div className=\"post-form\">\r\n  <button onClick={handleTogglePostForm}>Create Post</button>\r\n\r\n  {showPostForm && (\r\n    <div className=\"post-container\">\r\n      <textarea\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        placeholder=\"What's on your mind?\"\r\n      />\r\n      <button onClick={handleMakePost}>Post</button>\r\n\r\n      <div className=\"photo-form\">\r\n        <button onClick={handleTogglePhotoForm}>Upload Photos</button>\r\n\r\n        {showPhotoForm && (\r\n          <div className=\"photo-container\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => handlePhotoUpload(e.target.files)}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n\r\n          <div>\r\n            {posts.map((post) => (\r\n              <div key={post.id} className=\"post-container\">\r\n                <p>\r\n                  <strong>{post.userName}</strong> {post.content}\r\n                </p>\r\n                <button onClick={() => handleToggleReplyForm(post.id)}>\r\n                  Reply\r\n                </button>\r\n\r\n                {showReplyForm[post.id] && (\r\n                  <div className=\"post-container reply-container\">\r\n                    <textarea\r\n                      value={replyInput}\r\n                      onChange={(e) => setReplyInput(e.target.value)}\r\n                      placeholder=\"Your reply...\"\r\n                    />\r\n                    <button onClick={() => handleMakeReply(post.id)}>\r\n                      Reply\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n{post.replies && (\r\n  <div>\r\n    <h3>Comments</h3>\r\n    {showAllReplies[post.id]\r\n      ? post.replies.slice().reverse().map((reply, index) => (\r\n          <p key={index} className=\"reply\">\r\n            <strong>{reply.userName}</strong> {reply.content}\r\n          </p>\r\n        ))\r\n      : post.replies.slice().reverse().slice(0, 2).map((reply, index) => (\r\n          <p key={index} className=\"reply\">\r\n            <strong>{reply.userName}</strong> {reply.content}\r\n          </p>\r\n        ))}\r\n\r\n    {post.replies.length > 2 && !showAllReplies[post.id] && (\r\n      <button onClick={() => handleShowAllReplies(post.id)}>\r\n        ...\r\n      </button>\r\n    )}\r\n  </div>\r\n)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}