{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\CreateAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport MainPage from './MainPage';\nimport logo from './GatorGoalMateLogo.png';\nimport './CreateAccount.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateAccount() {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const [emailError, setEmailError] = useState(''); // State for email error message\n\n  const makeAPICall = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/profile', {\n        mode: 'cors'\n      });\n      const data = await response.json();\n\n      // Only set state values if data.user is defined\n      if (data.user) {\n        setFirstName(data.user);\n        setLastName(data.user);\n        setEmail(data.user);\n        setUsername(data.user);\n        setPassword(data.user);\n      }\n      setLoading(false);\n      // setFirstName(data.user);\n      // setLastName(data.user);\n      // setEmail(data.user);\n      // setUsername(data.user);\n      // setPassword(data.user);\n      // setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setLoading(false);\n    }\n  };\n  const validateEmail = email => {\n    return email.endsWith(\"@ufl.edu\");\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // Reset the email error state each time the form is submitted\n    setEmailError('');\n\n    // Check if the email ends with \"@ufl.edu\"\n    if (!validateEmail(email)) {\n      setEmailError('Email must end with \"@ufl.edu\"');\n      return; // Stop form submission if the email is invalid\n    }\n    if (password !== confirmPassword) {\n      console.log(\"Passwords do not match\");\n      // set an error state to display a message to the user\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        console.log(\"Account created successfully\");\n        navigate(\"/main-page\", {\n          state: {\n            username\n          }\n        });\n        //console.log(\"username: \", username);\n        // Optionally, you can redirect the user to another page or show a success message\n      } else {\n        console.error(\"Failed to create account\");\n        // Optionally, you can set an error state to display a message to the user\n      }\n    } catch (error) {\n      console.error('Error creating account:', error);\n      // Optionally, you can set an error state to display a message to the user\n    }\n    //console.log(firstName, lastName, email, username, password, confirmPassword);\n\n    // After form submission logic (e.g., after successful account creation), navigate to MainPage\n    //navigate(\"/main-page\"); // Use the path you've assigned to MainPage in your routing setup\n  };\n  useEffect(() => {\n    makeAPICall();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"GatorGoalMate Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"homepage-link\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"accountForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          placeholder: \"First Name\",\n          required: true,\n          value: firstName,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          placeholder: \"Last Name\",\n          required: true,\n          value: lastName,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email (must end with @ufl.edu)\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Username\",\n          required: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          required: true,\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateAccount, \"tlhDDuYQV+ZuZP6M7dp0VFiQHto=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Link","MainPage","logo","jsxDEV","_jsxDEV","CreateAccount","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigate","emailError","setEmailError","makeAPICall","response","fetch","mode","data","json","user","error","console","validateEmail","endsWith","handleSubmit","event","preventDefault","log","method","headers","body","JSON","stringify","ok","state","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","id","onSubmit","type","placeholder","required","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/CreateAccount.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport MainPage from './MainPage';\r\nimport logo from './GatorGoalMateLogo.png'; \r\nimport './CreateAccount.css'; \r\n\r\n\r\nfunction CreateAccount() {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const [emailError, setEmailError] = useState(''); // State for email error message\r\n\r\n\r\n  const makeAPICall = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/profile', { mode: 'cors' });\r\n      const data = await response.json();\r\n\r\n      // Only set state values if data.user is defined\r\n    if (data.user) {\r\n      setFirstName(data.user);\r\n      setLastName(data.user);\r\n      setEmail(data.user);\r\n      setUsername(data.user);\r\n      setPassword(data.user);\r\n    }\r\n    setLoading(false);\r\n      // setFirstName(data.user);\r\n      // setLastName(data.user);\r\n      // setEmail(data.user);\r\n      // setUsername(data.user);\r\n      // setPassword(data.user);\r\n      // setLoading(false);\r\n    } \r\n    catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    return email.endsWith(\"@ufl.edu\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // Reset the email error state each time the form is submitted\r\n    setEmailError('');\r\n\r\n    // Check if the email ends with \"@ufl.edu\"\r\n    if (!validateEmail(email)) {\r\n      setEmailError('Email must end with \"@ufl.edu\"');\r\n      return; // Stop form submission if the email is invalid\r\n    }\r\n  \r\n    if (password !== confirmPassword) {\r\n      console.log(\"Passwords do not match\");\r\n      // set an error state to display a message to the user\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/profile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          username,\r\n          password\r\n        })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(\"Account created successfully\");\r\n        navigate(\"/main-page\", {state : {username}});\r\n        //console.log(\"username: \", username);\r\n        // Optionally, you can redirect the user to another page or show a success message\r\n      } else {\r\n        console.error(\"Failed to create account\");\r\n        // Optionally, you can set an error state to display a message to the user\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating account:', error);\r\n      // Optionally, you can set an error state to display a message to the user\r\n    }\r\n    //console.log(firstName, lastName, email, username, password, confirmPassword);\r\n    \r\n    // After form submission logic (e.g., after successful account creation), navigate to MainPage\r\n    //navigate(\"/main-page\"); // Use the path you've assigned to MainPage in your routing setup\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeAPICall();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <img src={logo} alt=\"GatorGoalMate Logo\" className=\"logo\" />\r\n      <div className=\"form-wrapper\">\r\n        <h2>Create Your Account</h2>\r\n        <Link to=\"/\" className=\"homepage-link\">Home</Link>\r\n        <form id=\"accountForm\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstname\"\r\n            placeholder=\"First Name\"\r\n            required\r\n            value={firstName}\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastname\"\r\n            placeholder=\"Last Name\"\r\n            required\r\n            value={lastName}\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email (must end with @ufl.edu)\"\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          {emailError && <div className=\"error-message\">{emailError}</div>}\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            placeholder=\"Username\"\r\n            required\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"btn\">Create Account</button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateAccount;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}