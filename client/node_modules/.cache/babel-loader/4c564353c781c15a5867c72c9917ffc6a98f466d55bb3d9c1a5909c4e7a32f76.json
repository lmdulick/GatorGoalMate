{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lduli\\\\GatorGoalMate\\\\client\\\\src\\\\ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './ProfilePage.css';\nimport logo from './GatorGoalMateLogo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const username = location.state.username;\n  const [profile, setProfile] = useState(null);\n  const [isEditing, setIsEditing] = useState({\n    firstName: false,\n    lastName: false,\n    username: false,\n    password: false\n  });\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    username: username,\n    password: '********'\n  });\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [changesMade, setChangesMade] = useState(false);\n\n  // search through 'Collection-Profile' to find the profile with the given username\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/profile', {\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch profiles');\n        }\n        const profiles = await response.json();\n        const foundProfile = profiles.find(profile => profile.username === username);\n        setProfile(foundProfile);\n      } catch (error) {\n        console.error('Error fetching profile:', error.message);\n      }\n    };\n    fetchProfile();\n  }, [username]);\n  const handleEdit = field => {\n    setIsEditing({\n      ...isEditing,\n      [field]: true\n    });\n    setChangesMade(true);\n  };\n  const handleChange = (field, event) => {\n    setValues({\n      ...values,\n      [field]: event.target.value\n    });\n  };\n  const handleSave = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save changes');\n      }\n      setChangesMade(false);\n      setIsEditing({\n        firstName: false,\n        lastName: false,\n        username: false,\n        password: false\n      });\n    } catch (error) {\n      console.error('Error saving changes:', error.message);\n    }\n  };\n\n  // DELETE a user's profile after clicking 'Delete Account' button\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete profile');\n      }\n\n      // Redirect to the homepage after successful deletion\n      navigate('/');\n    } catch (error) {\n      console.error('Error deleting profile:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"GatorGoalMate Logo\",\n      className: \"profile-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: \"Profile Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"homepage-link\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/main-page\",\n      state: {\n        username\n      },\n      className: \"mainpage-link\",\n      children: \"Main Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), profile && ['firstName', 'lastName', 'username'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.charAt(0).toUpperCase() + field.slice(1).replace('Name', ' name') + ':'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), isEditing[field] ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: values[field],\n        onChange: e => handleChange(field, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: profile[field]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => handleEdit(field),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, field, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), isEditing.password ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: values.password,\n        onChange: e => handleChange('password', e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => handleEdit('password'),\n        children: isEditing.password ? 'Save' : 'Edit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), changesMade && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-button\",\n      onClick: handleSave,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => setShowDeleteModal(true),\n        children: \"Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-pop-up\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete your account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDeleteModal(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(ProfilePage, \"KsdkuUu7ZswOPDLRNI63U4I86nw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Link","logo","jsxDEV","_jsxDEV","ProfilePage","_s","navigate","location","username","state","profile","setProfile","isEditing","setIsEditing","firstName","lastName","password","values","setValues","showDeleteModal","setShowDeleteModal","changesMade","setChangesMade","fetchProfile","response","fetch","mode","ok","Error","profiles","json","foundProfile","find","error","console","message","handleEdit","field","handleChange","event","target","value","handleSave","_id","method","headers","body","JSON","stringify","handleDelete","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","map","charAt","toUpperCase","slice","replace","type","onChange","e","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lduli/GatorGoalMate/client/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './ProfilePage.css';\r\nimport logo from './GatorGoalMateLogo.png';\r\n\r\nfunction ProfilePage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const username = location.state.username;\r\n\r\n  const [profile, setProfile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    username: false,\r\n    password: false,\r\n  });\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    username: username,\r\n    password: '********',\r\n  });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [changesMade, setChangesMade] = useState(false);\r\n\r\n  // search through 'Collection-Profile' to find the profile with the given username\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/profile', { mode: 'cors' });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch profiles');\r\n        }\r\n        const profiles = await response.json();\r\n        const foundProfile = profiles.find(profile => profile.username === username);\r\n        setProfile(foundProfile);\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [username]);\r\n\r\n  const handleEdit = (field) => {\r\n    setIsEditing({ ...isEditing, [field]: true });\r\n    setChangesMade(true);\r\n  };\r\n\r\n  const handleChange = (field, event) => {\r\n    setValues({ ...values, [field]: event.target.value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save changes');\r\n      }\r\n\r\n      setChangesMade(false);\r\n      setIsEditing({\r\n        firstName: false,\r\n        lastName: false,\r\n        username: false,\r\n        password: false,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving changes:', error.message);\r\n    }\r\n  };\r\n\r\n  // DELETE a user's profile after clicking 'Delete Account' button\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/profile/${profile._id}`, {\r\n        method: 'DELETE',\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete profile');\r\n      }\r\n  \r\n      // Redirect to the homepage after successful deletion\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Error deleting profile:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <img src={logo} alt=\"GatorGoalMate Logo\" className=\"profile-logo\" />\r\n      <div className=\"profile-header\">\r\n        Profile Information</div>\r\n        <Link to=\"/\" className=\"homepage-link\">Home</Link>\r\n        <Link to=\"/main-page\" state={{ username }} className=\"mainpage-link\">Main Screen</Link>\r\n      \r\n\r\n      {profile && ['firstName', 'lastName', 'username'].map((field) => (\r\n        <div className=\"profile-detail\" key={field}>\r\n          <label>{field.charAt(0).toUpperCase() + field.slice(1).replace('Name', ' name') + ':'}</label>\r\n          {isEditing[field] ? (\r\n            <input\r\n              type=\"text\"\r\n              value={values[field]}\r\n              onChange={(e) => handleChange(field, e)}\r\n            />\r\n          ) : (\r\n            <span>{profile[field]}</span>\r\n          )}\r\n          <button className=\"edit-button\" onClick={() => handleEdit(field)}>Edit</button>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"profile-detail\">\r\n        <label>Password:</label>\r\n        {isEditing.password ? (\r\n          <input\r\n            type=\"password\"\r\n            value={values.password}\r\n            onChange={(e) => handleChange('password', e)}\r\n          />\r\n        ) : (\r\n          <span>{values.password}</span>\r\n        )}\r\n        <button className=\"edit-button\" onClick={() => handleEdit('password')}>\r\n          {isEditing.password ? 'Save' : 'Edit'}\r\n        </button>\r\n      </div>\r\n\r\n      {changesMade && (\r\n        <button className=\"save-button\" onClick={handleSave}>Save Changes</button>\r\n      )}\r\n\r\n      <div className=\"profile-actions\">\r\n        <button className=\"delete-button\" onClick={() => setShowDeleteModal(true)}>Delete Account</button>\r\n      </div>\r\n\r\n      {showDeleteModal && (\r\n        <div className=\"delete-pop-up\">\r\n          <div className=\"delete-content\">\r\n            <p>Are you sure you want to delete your account?</p>\r\n            <button onClick={handleDelete}>Yes</button>\r\n            <button onClick={() => setShowDeleteModal(false)}>No</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}